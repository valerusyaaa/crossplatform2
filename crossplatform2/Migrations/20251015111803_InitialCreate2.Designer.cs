// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using crossplatform2.Data;

#nullable disable

namespace crossplatform2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251015111803_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("crossplatform2.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Electronic devices",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Books and literature",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Clothes and accessories",
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Home and garden",
                            Name = "Home"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Sports equipment",
                            Name = "Sports"
                        });
                });

            modelBuilder.Entity("crossplatform2.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ArchivedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CancelledDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("crossplatform2.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("crossplatform2.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Laptop",
                            Price = 999.99m,
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Smartphone",
                            Price = 499.99m,
                            StockQuantity = 20
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Tablet",
                            Price = 299.99m,
                            StockQuantity = 15
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Name = "Headphones",
                            Price = 99.99m,
                            StockQuantity = 30
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Name = "Smart Watch",
                            Price = 199.99m,
                            StockQuantity = 25
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Name = "Programming Book",
                            Price = 49.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Name = "Science Fiction",
                            Price = 19.99m,
                            StockQuantity = 40
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Name = "Cookbook",
                            Price = 29.99m,
                            StockQuantity = 35
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Name = "T-Shirt",
                            Price = 24.99m,
                            StockQuantity = 100
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Name = "Jeans",
                            Price = 59.99m,
                            StockQuantity = 60
                        });
                });

            modelBuilder.Entity("crossplatform2.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("crossplatform2.Models.OrderItem", b =>
                {
                    b.HasOne("crossplatform2.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("crossplatform2.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("crossplatform2.Models.Product", b =>
                {
                    b.HasOne("crossplatform2.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("crossplatform2.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("crossplatform2.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
